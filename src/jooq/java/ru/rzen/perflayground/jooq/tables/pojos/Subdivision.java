/*
 * This file is generated by jOOQ.
 */
package ru.rzen.perflayground.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Subdivision implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final String shortName;
    private final String path;
    private final UUID parentId;

    public Subdivision(Subdivision value) {
        this.id = value.id;
        this.shortName = value.shortName;
        this.path = value.path;
        this.parentId = value.parentId;
    }

    public Subdivision(
        UUID id,
        String shortName,
        String path,
        UUID parentId
    ) {
        this.id = id;
        this.shortName = shortName;
        this.path = path;
        this.parentId = parentId;
    }

    /**
     * Getter for <code>public.subdivision.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.subdivision.short_name</code>.
     */
    public String getShortName() {
        return this.shortName;
    }

    /**
     * Getter for <code>public.subdivision.path</code>.
     */
    public String getPath() {
        return this.path;
    }

    /**
     * Getter for <code>public.subdivision.parent_id</code>.
     */
    public UUID getParentId() {
        return this.parentId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Subdivision other = (Subdivision) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.shortName == null) {
            if (other.shortName != null)
                return false;
        }
        else if (!this.shortName.equals(other.shortName))
            return false;
        if (this.path == null) {
            if (other.path != null)
                return false;
        }
        else if (!this.path.equals(other.path))
            return false;
        if (this.parentId == null) {
            if (other.parentId != null)
                return false;
        }
        else if (!this.parentId.equals(other.parentId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.shortName == null) ? 0 : this.shortName.hashCode());
        result = prime * result + ((this.path == null) ? 0 : this.path.hashCode());
        result = prime * result + ((this.parentId == null) ? 0 : this.parentId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Subdivision (");

        sb.append(id);
        sb.append(", ").append(shortName);
        sb.append(", ").append(path);
        sb.append(", ").append(parentId);

        sb.append(")");
        return sb.toString();
    }
}
