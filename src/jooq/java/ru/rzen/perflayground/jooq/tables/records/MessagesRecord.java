/*
 * This file is generated by jOOQ.
 */
package ru.rzen.perflayground.jooq.tables.records;


import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.rzen.perflayground.jooq.tables.Messages;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.messages.id</code>.
     */
    public MessagesRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.messages.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.messages.body</code>.
     */
    public MessagesRecord setBody(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.messages.body</code>.
     */
    public String getBody() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(Messages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(UUID id, String body) {
        super(Messages.MESSAGES);

        setId(id);
        setBody(body);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(ru.rzen.perflayground.jooq.tables.pojos.Messages value) {
        super(Messages.MESSAGES);

        if (value != null) {
            setId(value.getId());
            setBody(value.getBody());
            resetChangedOnNotNull();
        }
    }
}
